"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_src_components_Dashboard_Dashboard_jsx",{

/***/ "(app-pages-browser)/./src/components/Charts/RiskFactorsChart.jsx":
/*!****************************************************!*\
  !*** ./src/components/Charts/RiskFactorsChart.jsx ***!
  \****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ RiskFactorsChart; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var chart_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! chart.js */ \"(app-pages-browser)/./node_modules/chart.js/dist/chart.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nchart_js__WEBPACK_IMPORTED_MODULE_2__.Chart.register(...chart_js__WEBPACK_IMPORTED_MODULE_2__.registerables);\nfunction RiskFactorsChart(param) {\n    let { data } = param;\n    _s();\n    const chartRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const chartInstance = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!(data === null || data === void 0 ? void 0 : data.agentPredictions) || !chartRef.current) return;\n        if (chartInstance.current) {\n            chartInstance.current.destroy();\n        }\n        // Count occurrences of each risk factor\n        const factorCounts = {};\n        data.agentPredictions.forEach((agent)=>{\n            if (agent.top_factors && agent.top_factors.length) {\n                agent.top_factors.forEach((factor)=>{\n                    factorCounts[factor] = (factorCounts[factor] || 0) + 1;\n                });\n            }\n        });\n        // Convert to array and sort by count\n        const factorsArray = Object.entries(factorCounts).map((param)=>{\n            let [factor, count] = param;\n            return {\n                factor,\n                count\n            };\n        }).sort((a, b)=>b.count - a.count).slice(0, 6); // Top 6 factors\n        const ctx = chartRef.current.getContext(\"2d\");\n        chartInstance.current = new chart_js__WEBPACK_IMPORTED_MODULE_2__.Chart(ctx, {\n            type: \"bar\",\n            data: {\n                labels: factorsArray.map((item)=>item.factor),\n                datasets: [\n                    {\n                        label: \"Occurrence Count\",\n                        data: factorsArray.map((item)=>item.count),\n                        backgroundColor: [\n                            \"rgba(239, 68, 68, 0.7)\",\n                            \"rgba(249, 115, 22, 0.7)\",\n                            \"rgba(245, 158, 11, 0.7)\",\n                            \"rgba(16, 185, 129, 0.7)\",\n                            \"rgba(59, 130, 246, 0.7)\",\n                            \"rgba(139, 92, 246, 0.7)\"\n                        ],\n                        borderColor: [\n                            \"rgba(239, 68, 68, 1)\",\n                            \"rgba(249, 115, 22, 1)\",\n                            \"rgba(245, 158, 11, 1)\",\n                            \"rgba(16, 185, 129, 1)\",\n                            \"rgba(59, 130, 246, 1)\",\n                            \"rgba(139, 92, 246, 1)\"\n                        ],\n                        borderWidth: 1\n                    }\n                ]\n            },\n            options: {\n                indexAxis: \"y\",\n                responsive: true,\n                maintainAspectRatio: false,\n                plugins: {\n                    title: {\n                        display: true,\n                        text: \"Top Risk Factors\",\n                        font: {\n                            size: 16\n                        }\n                    },\n                    legend: {\n                        display: false\n                    }\n                },\n                scales: {\n                    x: {\n                        beginAtZero: true,\n                        title: {\n                            display: true,\n                            text: \"Number of Agents\"\n                        }\n                    }\n                }\n            }\n        });\n        return ()=>{\n            if (chartInstance.current) {\n                chartInstance.current.destroy();\n            }\n        };\n    }, [\n        data\n    ]);\n    if (!(data === null || data === void 0 ? void 0 : data.agentPredictions)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"h-64 flex items-center justify-center bg-gray-50 rounded-lg\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                className: \"text-gray-500\",\n                children: \"No risk factor data available\"\n            }, void 0, false, {\n                fileName: \"D:\\\\data_storm_dashboard\\\\dashboard\\\\src\\\\components\\\\Charts\\\\RiskFactorsChart.jsx\",\n                lineNumber: 98,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"D:\\\\data_storm_dashboard\\\\dashboard\\\\src\\\\components\\\\Charts\\\\RiskFactorsChart.jsx\",\n            lineNumber: 97,\n            columnNumber: 7\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"h-64\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n            ref: chartRef\n        }, void 0, false, {\n            fileName: \"D:\\\\data_storm_dashboard\\\\dashboard\\\\src\\\\components\\\\Charts\\\\RiskFactorsChart.jsx\",\n            lineNumber: 105,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"D:\\\\data_storm_dashboard\\\\dashboard\\\\src\\\\components\\\\Charts\\\\RiskFactorsChart.jsx\",\n        lineNumber: 104,\n        columnNumber: 5\n    }, this);\n}\n_s(RiskFactorsChart, \"u5+iHnwD4hjVcMuzTE/TbI78erc=\");\n_c = RiskFactorsChart;\nvar _c;\n$RefreshReg$(_c, \"RiskFactorsChart\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0NoYXJ0cy9SaXNrRmFjdG9yc0NoYXJ0LmpzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBRTBDO0FBQ007QUFFaERFLDJDQUFLQSxDQUFDRSxRQUFRLElBQUlELG1EQUFhQTtBQUVoQixTQUFTRSxpQkFBaUIsS0FBUTtRQUFSLEVBQUVDLElBQUksRUFBRSxHQUFSOztJQUN2QyxNQUFNQyxXQUFXTiw2Q0FBTUEsQ0FBQztJQUN4QixNQUFNTyxnQkFBZ0JQLDZDQUFNQSxDQUFDO0lBRTdCRCxnREFBU0EsQ0FBQztRQUNSLElBQUksRUFBQ00saUJBQUFBLDJCQUFBQSxLQUFNRyxnQkFBZ0IsS0FBSSxDQUFDRixTQUFTRyxPQUFPLEVBQUU7UUFFbEQsSUFBSUYsY0FBY0UsT0FBTyxFQUFFO1lBQ3pCRixjQUFjRSxPQUFPLENBQUNDLE9BQU87UUFDL0I7UUFFQSx3Q0FBd0M7UUFDeEMsTUFBTUMsZUFBZSxDQUFDO1FBQ3RCTixLQUFLRyxnQkFBZ0IsQ0FBQ0ksT0FBTyxDQUFDQyxDQUFBQTtZQUM1QixJQUFJQSxNQUFNQyxXQUFXLElBQUlELE1BQU1DLFdBQVcsQ0FBQ0MsTUFBTSxFQUFFO2dCQUNqREYsTUFBTUMsV0FBVyxDQUFDRixPQUFPLENBQUNJLENBQUFBO29CQUN4QkwsWUFBWSxDQUFDSyxPQUFPLEdBQUcsQ0FBQ0wsWUFBWSxDQUFDSyxPQUFPLElBQUksS0FBSztnQkFDdkQ7WUFDRjtRQUNGO1FBRUEscUNBQXFDO1FBQ3JDLE1BQU1DLGVBQWVDLE9BQU9DLE9BQU8sQ0FBQ1IsY0FDakNTLEdBQUcsQ0FBQztnQkFBQyxDQUFDSixRQUFRSyxNQUFNO21CQUFNO2dCQUFFTDtnQkFBUUs7WUFBTTtXQUMxQ0MsSUFBSSxDQUFDLENBQUNDLEdBQUdDLElBQU1BLEVBQUVILEtBQUssR0FBR0UsRUFBRUYsS0FBSyxFQUNoQ0ksS0FBSyxDQUFDLEdBQUcsSUFBSSxnQkFBZ0I7UUFFaEMsTUFBTUMsTUFBTXBCLFNBQVNHLE9BQU8sQ0FBQ2tCLFVBQVUsQ0FBQztRQUN4Q3BCLGNBQWNFLE9BQU8sR0FBRyxJQUFJUiwyQ0FBS0EsQ0FBQ3lCLEtBQUs7WUFDckNFLE1BQU07WUFDTnZCLE1BQU07Z0JBQ0p3QixRQUFRWixhQUFhRyxHQUFHLENBQUNVLENBQUFBLE9BQVFBLEtBQUtkLE1BQU07Z0JBQzVDZSxVQUFVO29CQUFDO3dCQUNUQyxPQUFPO3dCQUNQM0IsTUFBTVksYUFBYUcsR0FBRyxDQUFDVSxDQUFBQSxPQUFRQSxLQUFLVCxLQUFLO3dCQUN6Q1ksaUJBQWlCOzRCQUNmOzRCQUNBOzRCQUNBOzRCQUNBOzRCQUNBOzRCQUNBO3lCQUNEO3dCQUNEQyxhQUFhOzRCQUNYOzRCQUNBOzRCQUNBOzRCQUNBOzRCQUNBOzRCQUNBO3lCQUNEO3dCQUNEQyxhQUFhO29CQUNmO2lCQUFFO1lBQ0o7WUFDQUMsU0FBUztnQkFDUEMsV0FBVztnQkFDWEMsWUFBWTtnQkFDWkMscUJBQXFCO2dCQUNyQkMsU0FBUztvQkFDUEMsT0FBTzt3QkFDTEMsU0FBUzt3QkFDVEMsTUFBTTt3QkFDTkMsTUFBTTs0QkFBRUMsTUFBTTt3QkFBRztvQkFDbkI7b0JBQ0FDLFFBQVE7d0JBQ05KLFNBQVM7b0JBQ1g7Z0JBQ0Y7Z0JBQ0FLLFFBQVE7b0JBQ05DLEdBQUc7d0JBQ0RDLGFBQWE7d0JBQ2JSLE9BQU87NEJBQ0xDLFNBQVM7NEJBQ1RDLE1BQU07d0JBQ1I7b0JBQ0Y7Z0JBQ0Y7WUFDRjtRQUNGO1FBRUEsT0FBTztZQUNMLElBQUlwQyxjQUFjRSxPQUFPLEVBQUU7Z0JBQ3pCRixjQUFjRSxPQUFPLENBQUNDLE9BQU87WUFDL0I7UUFDRjtJQUNGLEdBQUc7UUFBQ0w7S0FBSztJQUVULElBQUksRUFBQ0EsaUJBQUFBLDJCQUFBQSxLQUFNRyxnQkFBZ0IsR0FBRTtRQUMzQixxQkFDRSw4REFBQzBDO1lBQUlDLFdBQVU7c0JBQ2IsNEVBQUNDO2dCQUFFRCxXQUFVOzBCQUFnQjs7Ozs7Ozs7Ozs7SUFHbkM7SUFFQSxxQkFDRSw4REFBQ0Q7UUFBSUMsV0FBVTtrQkFDYiw0RUFBQ0U7WUFBT0MsS0FBS2hEOzs7Ozs7Ozs7OztBQUduQjtHQXBHd0JGO0tBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL0NoYXJ0cy9SaXNrRmFjdG9yc0NoYXJ0LmpzeD81NTZmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcclxuXHJcbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBDaGFydCwgcmVnaXN0ZXJhYmxlcyB9IGZyb20gJ2NoYXJ0LmpzJztcclxuXHJcbkNoYXJ0LnJlZ2lzdGVyKC4uLnJlZ2lzdGVyYWJsZXMpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUmlza0ZhY3RvcnNDaGFydCh7IGRhdGEgfSkge1xyXG4gIGNvbnN0IGNoYXJ0UmVmID0gdXNlUmVmKG51bGwpO1xyXG4gIGNvbnN0IGNoYXJ0SW5zdGFuY2UgPSB1c2VSZWYobnVsbCk7XHJcbiAgXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGlmICghZGF0YT8uYWdlbnRQcmVkaWN0aW9ucyB8fCAhY2hhcnRSZWYuY3VycmVudCkgcmV0dXJuO1xyXG4gICAgXHJcbiAgICBpZiAoY2hhcnRJbnN0YW5jZS5jdXJyZW50KSB7XHJcbiAgICAgIGNoYXJ0SW5zdGFuY2UuY3VycmVudC5kZXN0cm95KCk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vIENvdW50IG9jY3VycmVuY2VzIG9mIGVhY2ggcmlzayBmYWN0b3JcclxuICAgIGNvbnN0IGZhY3RvckNvdW50cyA9IHt9O1xyXG4gICAgZGF0YS5hZ2VudFByZWRpY3Rpb25zLmZvckVhY2goYWdlbnQgPT4ge1xyXG4gICAgICBpZiAoYWdlbnQudG9wX2ZhY3RvcnMgJiYgYWdlbnQudG9wX2ZhY3RvcnMubGVuZ3RoKSB7XHJcbiAgICAgICAgYWdlbnQudG9wX2ZhY3RvcnMuZm9yRWFjaChmYWN0b3IgPT4ge1xyXG4gICAgICAgICAgZmFjdG9yQ291bnRzW2ZhY3Rvcl0gPSAoZmFjdG9yQ291bnRzW2ZhY3Rvcl0gfHwgMCkgKyAxO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgLy8gQ29udmVydCB0byBhcnJheSBhbmQgc29ydCBieSBjb3VudFxyXG4gICAgY29uc3QgZmFjdG9yc0FycmF5ID0gT2JqZWN0LmVudHJpZXMoZmFjdG9yQ291bnRzKVxyXG4gICAgICAubWFwKChbZmFjdG9yLCBjb3VudF0pID0+ICh7IGZhY3RvciwgY291bnQgfSkpXHJcbiAgICAgIC5zb3J0KChhLCBiKSA9PiBiLmNvdW50IC0gYS5jb3VudClcclxuICAgICAgLnNsaWNlKDAsIDYpOyAvLyBUb3AgNiBmYWN0b3JzXHJcbiAgICBcclxuICAgIGNvbnN0IGN0eCA9IGNoYXJ0UmVmLmN1cnJlbnQuZ2V0Q29udGV4dCgnMmQnKTtcclxuICAgIGNoYXJ0SW5zdGFuY2UuY3VycmVudCA9IG5ldyBDaGFydChjdHgsIHtcclxuICAgICAgdHlwZTogJ2JhcicsIC8vIENoYW5nZWQgZnJvbSAnaG9yaXpvbnRhbEJhcicgdG8gJ2JhcidcclxuICAgICAgZGF0YToge1xyXG4gICAgICAgIGxhYmVsczogZmFjdG9yc0FycmF5Lm1hcChpdGVtID0+IGl0ZW0uZmFjdG9yKSxcclxuICAgICAgICBkYXRhc2V0czogW3tcclxuICAgICAgICAgIGxhYmVsOiAnT2NjdXJyZW5jZSBDb3VudCcsXHJcbiAgICAgICAgICBkYXRhOiBmYWN0b3JzQXJyYXkubWFwKGl0ZW0gPT4gaXRlbS5jb3VudCksXHJcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFtcclxuICAgICAgICAgICAgJ3JnYmEoMjM5LCA2OCwgNjgsIDAuNyknLFxyXG4gICAgICAgICAgICAncmdiYSgyNDksIDExNSwgMjIsIDAuNyknLFxyXG4gICAgICAgICAgICAncmdiYSgyNDUsIDE1OCwgMTEsIDAuNyknLFxyXG4gICAgICAgICAgICAncmdiYSgxNiwgMTg1LCAxMjksIDAuNyknLFxyXG4gICAgICAgICAgICAncmdiYSg1OSwgMTMwLCAyNDYsIDAuNyknLFxyXG4gICAgICAgICAgICAncmdiYSgxMzksIDkyLCAyNDYsIDAuNyknXHJcbiAgICAgICAgICBdLFxyXG4gICAgICAgICAgYm9yZGVyQ29sb3I6IFtcclxuICAgICAgICAgICAgJ3JnYmEoMjM5LCA2OCwgNjgsIDEpJyxcclxuICAgICAgICAgICAgJ3JnYmEoMjQ5LCAxMTUsIDIyLCAxKScsXHJcbiAgICAgICAgICAgICdyZ2JhKDI0NSwgMTU4LCAxMSwgMSknLFxyXG4gICAgICAgICAgICAncmdiYSgxNiwgMTg1LCAxMjksIDEpJyxcclxuICAgICAgICAgICAgJ3JnYmEoNTksIDEzMCwgMjQ2LCAxKScsXHJcbiAgICAgICAgICAgICdyZ2JhKDEzOSwgOTIsIDI0NiwgMSknXHJcbiAgICAgICAgICBdLFxyXG4gICAgICAgICAgYm9yZGVyV2lkdGg6IDFcclxuICAgICAgICB9XVxyXG4gICAgICB9LFxyXG4gICAgICBvcHRpb25zOiB7XHJcbiAgICAgICAgaW5kZXhBeGlzOiAneScsIC8vIFRoaXMgbWFrZXMgdGhlIGJhcnMgaG9yaXpvbnRhbFxyXG4gICAgICAgIHJlc3BvbnNpdmU6IHRydWUsXHJcbiAgICAgICAgbWFpbnRhaW5Bc3BlY3RSYXRpbzogZmFsc2UsXHJcbiAgICAgICAgcGx1Z2luczoge1xyXG4gICAgICAgICAgdGl0bGU6IHtcclxuICAgICAgICAgICAgZGlzcGxheTogdHJ1ZSxcclxuICAgICAgICAgICAgdGV4dDogJ1RvcCBSaXNrIEZhY3RvcnMnLFxyXG4gICAgICAgICAgICBmb250OiB7IHNpemU6IDE2IH1cclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICBsZWdlbmQ6IHtcclxuICAgICAgICAgICAgZGlzcGxheTogZmFsc2VcclxuICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIHNjYWxlczoge1xyXG4gICAgICAgICAgeDoge1xyXG4gICAgICAgICAgICBiZWdpbkF0WmVybzogdHJ1ZSxcclxuICAgICAgICAgICAgdGl0bGU6IHtcclxuICAgICAgICAgICAgICBkaXNwbGF5OiB0cnVlLFxyXG4gICAgICAgICAgICAgIHRleHQ6ICdOdW1iZXIgb2YgQWdlbnRzJ1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgaWYgKGNoYXJ0SW5zdGFuY2UuY3VycmVudCkge1xyXG4gICAgICAgIGNoYXJ0SW5zdGFuY2UuY3VycmVudC5kZXN0cm95KCk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcbiAgfSwgW2RhdGFdKTtcclxuICBcclxuICBpZiAoIWRhdGE/LmFnZW50UHJlZGljdGlvbnMpIHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaC02NCBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBiZy1ncmF5LTUwIHJvdW5kZWQtbGdcIj5cclxuICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LWdyYXktNTAwXCI+Tm8gcmlzayBmYWN0b3IgZGF0YSBhdmFpbGFibGU8L3A+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgKTtcclxuICB9XHJcbiAgXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lPVwiaC02NFwiPlxyXG4gICAgICA8Y2FudmFzIHJlZj17Y2hhcnRSZWZ9PjwvY2FudmFzPlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufSJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJDaGFydCIsInJlZ2lzdGVyYWJsZXMiLCJyZWdpc3RlciIsIlJpc2tGYWN0b3JzQ2hhcnQiLCJkYXRhIiwiY2hhcnRSZWYiLCJjaGFydEluc3RhbmNlIiwiYWdlbnRQcmVkaWN0aW9ucyIsImN1cnJlbnQiLCJkZXN0cm95IiwiZmFjdG9yQ291bnRzIiwiZm9yRWFjaCIsImFnZW50IiwidG9wX2ZhY3RvcnMiLCJsZW5ndGgiLCJmYWN0b3IiLCJmYWN0b3JzQXJyYXkiLCJPYmplY3QiLCJlbnRyaWVzIiwibWFwIiwiY291bnQiLCJzb3J0IiwiYSIsImIiLCJzbGljZSIsImN0eCIsImdldENvbnRleHQiLCJ0eXBlIiwibGFiZWxzIiwiaXRlbSIsImRhdGFzZXRzIiwibGFiZWwiLCJiYWNrZ3JvdW5kQ29sb3IiLCJib3JkZXJDb2xvciIsImJvcmRlcldpZHRoIiwib3B0aW9ucyIsImluZGV4QXhpcyIsInJlc3BvbnNpdmUiLCJtYWludGFpbkFzcGVjdFJhdGlvIiwicGx1Z2lucyIsInRpdGxlIiwiZGlzcGxheSIsInRleHQiLCJmb250Iiwic2l6ZSIsImxlZ2VuZCIsInNjYWxlcyIsIngiLCJiZWdpbkF0WmVybyIsImRpdiIsImNsYXNzTmFtZSIsInAiLCJjYW52YXMiLCJyZWYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Charts/RiskFactorsChart.jsx\n"));

/***/ })

});